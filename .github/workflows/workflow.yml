name: OpenFisca France Workflow

on: [push]

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache install
        id: restore-install
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-install-${{ hashFiles('setup.py') }} # cache the entire Python environment
      - name: Install dependencies
        if: steps.restore-install.outputs.cache-hit != 'true'
        run: make install

  lint-files:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
    needs: install
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # to fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache install
        id: restore-install
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-install-${{ hashFiles('setup.py') }}
      - run: make check-syntax-errors
      - run: make check-style
      - name: Lint Python files
        run: "${GITHUB_WORKSPACE}/.github/lint-changed-python-files.sh"
      - name: Lint YAML tests
        run: "${GITHUB_WORKSPACE}/.github/lint-changed-yaml-tests.sh"

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}
      - name: Build package
        if: steps.restore-build.outputs.cache-hit != 'true'
        run: make build

  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}
      - run: ls -d "tests/**/*.py"
      - run: pytest

  test-yaml:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
        ci_node_total: [ 10 ]
        ci_node_index: [0,1,2,3,4,5,6,7,8,9]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}
      - name: Yaml tests
        id: yaml-test
        env:
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
        continue-on-error: true
        run: "${GITHUB_WORKSPACE}/.github/split-tests.sh"

  test-api:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}
      - name: Test the Web API
        run: "${GITHUB_WORKSPACE}/.github/test-api.sh"

  check-version-and-changelog:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
    needs: [test-python, test-yaml, test-api, lint-files]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # to fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check version number has been properly updated
        run: "${GITHUB_WORKSPACE}/.github/is-version-number-acceptable.sh"

  #GitHub Actions does not have a halt job option
  check-for-functional-changes:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
    if: github.ref == 'refs/heads/github-actions'
    needs: check-version-and-changelog
    outputs:
      status: ${{ steps.stop-early.outputs.status }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # to fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - id: stop-early
        run: if "${GITHUB_WORKSPACE}/.github/has-functional-changes.sh" ; then echo "::set-output name=status::success" ; fi

  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
    needs: [check-for-functional-changes]
    if: needs.check-for-functional-changes.outputs.status == 'success'
    env:
      PYPI_USERNAME: openfisca-bot
      PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }} # PYPI_PASSWORD: this value should be set in GitHub secrets!
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # to fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}
      - name: Upload a Python package to PyPi
        run: twine upload dist/* --username $PYPI_USERNAME --password $PYPI_PASSWORD
      - name: Publish a git tag
        run: "${GITHUB_WORKSPACE}/.github/publish-git-tag.sh"
      - name: Deploy the Web API
        run: ssh -o StrictHostKeyChecking=no deploy-api@fr.openfisca.org
